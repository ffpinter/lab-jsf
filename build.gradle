plugins {
    id 'java'
    id 'war'
}

targetCompatibility = JavaVersion.VERSION_14
sourceCompatibility = JavaVersion.VERSION_14


group 'dev.pinter.lab-jsf'
version '0.2'

ext['payaraMicroVersion'] = '5.201'
ext['projectPayaraDevPort'] = 8080

repositories {
    mavenCentral()
    maven {
        url "http://repository.primefaces.org"
    }
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'

    implementation 'org.glassfish.jersey.inject:jersey-hk2:2.33'
    implementation 'org.glassfish.jersey.core:jersey-client:2.33'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.33'

    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-providers:2.12.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    implementation 'org.jdbi:jdbi3-sqlobject:3.18.0'
    implementation 'org.apache.derby:derby:10.15.2.0'
    implementation 'org.apache.derby:derbytools:10.15.2.0'
    implementation group: 'org.primefaces', name: 'primefaces', version: '8.0'
    implementation group: 'org.glassfish', name: 'jakarta.faces', version: '2.3.14'
    implementation group: 'org.primefaces.themes', name: 'all-themes', version: '1.0.10'

    compileOnly "fish.payara.extras:payara-micro:"+payaraMicroVersion
    compileOnly "fish.payara.extras:payara-embedded-all:"+payaraMicroVersion
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'
    providedRuntime('org.glassfish.jaxb:jaxb-runtime:2.3.0', 'javax.activation:activation:1.1.1', 'javax.xml.bind:jaxb-api:2.3.1')
}

test {
    useJUnitPlatform()
}
task runMicro(type: Exec, dependsOn: war) {
    afterEvaluate { Project project ->
        def payaraJarPath = configurations
                .compileOnly
                .find { it.name =~ 'payara-micro-' + payaraMicroVersion + '.jar' }
                .absolutePath
        def warFile = war.archivePath
        def payaraLibs = configurations.providedRuntime.findAll().join(File.pathSeparator)
        commandLine(
                System.getProperty('java.home') + '/bin/java',
                "-Dderby.system.home=${projectDir}/DERBYTUTOR",
                "-Djavax.net.ssl.keyStore=${projectDir}/dist/localhost.jks",
                '-Djavax.net.ssl.keyStorePassword=changeit',
                '--add-modules', 'java.se',
                '--add-exports', 'java.base/jdk.internal.ref=ALL-UNNAMED',
                '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                '--add-opens', 'java.base/java.nio=ALL-UNNAMED',
                '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED',
                '--add-opens', 'java.base/jdk.internal.loader=ALL-UNNAMED',
                '--add-opens', 'java.management/sun.management=ALL-UNNAMED',
                '--add-opens', 'jdk.management/com.sun.management.internal=ALL-UNNAMED',
                '-jar', payaraJarPath,
                '--sslcert','localhost',
                '--sslport','8443',
                '--rootDir', "${project.buildDir}/${project.name}-root",
                '--deploy', warFile,
                '--port', projectPayaraDevPort,
                '--addlibs', payaraLibs,
                '--addlibs', "${projectDir}/jars/derbytools-10.15.2.0.jar",
                '--addlibs', "${projectDir}/jars/derby-10.15.2.0.jar",
                '--addlibs', "${projectDir}/jars/derbyshared-10.15.2.0.jar")
    }
}
